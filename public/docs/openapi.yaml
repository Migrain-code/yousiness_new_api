openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://127.0.0.1:8001'
paths:
  /api/business/auth/login:
    post:
      summary: 'POST api/auth/login'
      operationId: pOSTApiauthlogin
      description: "Status Codes\n<ul>\n<li>phone</li>\n<li>password</li>\n<li> 401 Unauthorized Hatası </li>\n</ul>\nLogin apisi"
      parameters: []
      responses: {  }
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  description: ''
                  example: quis
                password:
                  type: string
                  description: ''
                  example: 'X,\D"jY6*jw2Wj#sC:'
              required:
                - phone
                - password
      security: []
  /api/business/auth/check-phone:
    post:
      summary: 'POST api/auth/check-phone'
      operationId: pOSTApiauthcheckPhone
      description: "<ul>\n<li>phone | string | required</li>\n</ul>\ntelefon numarası kontrol apisi"
      parameters: []
      responses: {  }
      tags:
        - Authentication
      security: []
  /api/business/auth/verify:
    post:
      summary: 'POST api/auth/verify'
      operationId: pOSTApiauthverify
      description: "<ul>\n<li>code | string | required | Doğrulama Kodu</li>\n<li>phone | string | required | Kullanıcı Telefon Numarası</li>\n<li>name | string | required | Kullanıcı Adı</li>\n<li>business_name | string | required | İşletme Adı</li>\n<li>phone | string | required</li>\n</ul>\nKod doğrulama ve kullanıcı kayıt apisi"
      parameters: []
      responses: {  }
      tags:
        - Authentication
      security: []
  /api/business/user:
    get:
      summary: 'GET api/auth/user'
      operationId: gETApiauthuser
      description: "<ul>\n<li>Token Göndermeniz Yeterli</li>\n</ul>\nLogout apisi"
      parameters:
        -
          in: header
          name: Bearer
          description: ''
          example: '{token}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Authentication
      security: []
  /api/business/logout:
    post:
      summary: 'POST api/auth/logout'
      operationId: pOSTApiauthlogout
      description: "<ul>\n<li>Token Göndermeniz Yeterli</li>\n</ul>\nLogout apisi"
      parameters:
        -
          in: header
          name: Bearer
          description: ''
          example: '{token}'
          schema:
            type: string
      responses: {  }
      tags:
        - Authentication
      security: []
  /api/business/business-service:
    get:
      summary: 'GET api/business-service'
      operationId: gETApibusinessService
      description: "Hizmetlerin listesini döndürecek size buradaki hizmet listesinden seçilen hizmetlerden seçilen hizmet eklenecek\n<br> Gerekli alanlar\n<ul>\n<li> token </li>\n</ul>"
      parameters:
        -
          in: header
          name: Bearer
          description: ''
          example: '{token}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - BusinessService
      security: []
  /api/business/business-service/get:
    post:
      summary: 'POST api/business-service/get'
      operationId: pOSTApibusinessServiceget
      description: "id si gönderilen işletme hizmetinin bilgilerini getirecek\n<br> Gerekli alanlar\n<ul>\n<li> token </li>\n<li>businessServiceId | required | güncellenecek hizmetin idsi</li>\n</ul>"
      parameters:
        -
          in: header
          name: Bearer
          description: ''
          example: '{token}'
          schema:
            type: string
      responses: {  }
      tags:
        - BusinessService
      security: []
  /api/business/business-service/add:
    post:
      summary: 'POST api/business-service/add'
      operationId: pOSTApibusinessServiceadd
      description: "Hizmetlerin listesini döndürecek size buradaki hizmet listesinden seçilen hizmetlerden seçilen hizmet eklenecek\n<br> Gerekli alanlar\n<ul>\n<li> token </li>\n<li> typeId |required | cinsiyet id si gelecek buradan  </li>\n<li> categoryId |required | hizmetin category id si gelecek buradan  </li>\n<li> subCategoryId |required | hizmetin sub_category id si gelecek buradan  </li>\n<li> time |required | hizmetin süresi gelecek buradan  </li>\n<li> price |required | hizmetin fiyatı gelecek buradan  </li>\n</ul>"
      parameters:
        -
          in: header
          name: Bearer
          description: ''
          example: '{token}'
          schema:
            type: string
      responses: {  }
      tags:
        - BusinessService
      security: []
  /api/business/business-service/update:
    post:
      summary: 'POST api/business-service/update'
      operationId: pOSTApibusinessServiceupdate
      description: "id si gönderilen işletme hizmetinin bilgilerini güncelleyek\n<br> Gerekli alanlar\n<ul>\n<li> token </li>\n<li>businessServiceId | required | güncellenecek hizmetin idsi</li>\n<li> typeId |required | cinsiyet id si gelecek buradan  </li>\n<li> categoryId |required | hizmetin category id si gelecek buradan  </li>\n<li> subCategoryId |required | hizmetin sub_category id si gelecek buradan  </li>\n<li> time |required | hizmetin süresi gelecek buradan  </li>\n<li> price |required | hizmetin fiyatı gelecek buradan  </li>\n</ul>"
      parameters:
        -
          in: header
          name: Bearer
          description: ''
          example: '{token}'
          schema:
            type: string
      responses: {  }
      tags:
        - BusinessService
      security: []
  /api/business/business-service/delete:
    post:
      summary: 'POST api/business-service/delete'
      operationId: pOSTApibusinessServicedelete
      description: "id si gönderilen işletme hizmetinin bilgilerini getirecek\n<br> Gerekli alanlar\n<ul>\n<li> token </li>\n<li>businessServiceId | required | güncellenecek hizmetin idsi</li>\n</ul>"
      parameters:
        -
          in: header
          name: Bearer
          description: ''
          example: '{token}'
          schema:
            type: string
      responses: {  }
      tags:
        - BusinessService
      security: []
  /api/business/detail-setup/step-1/get:
    get:
      summary: ''
      operationId: getApiBusinessDetailSetupStep1Get
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - DetailSetup
      security: []
  /api/business/detail-setup/step-1/update:
    post:
      summary: 'POST api/detail-setup/step-1/update'
      operationId: pOSTApidetailSetupstep1update
      description: "<ul>\n<li>Bearer Token</li>\n<li>officialName | string | required | Salon Sahibinin adı</li>\n<li>businessName | string | required | Salon Adı</li>\n<li>offDay | numeric | required | kapalı olduğu günün id si </li>\n<li>businessType | numeric | required | işletme türü id'si </li>\n<li>cityId  | string | required | Şehir</li>\n<li>districtId  | string | required | İlçe</li>\n<li>phone | string | required | İşletme Telefon Numarası</li>\n<li>email | string | required | İşletme E-posta Adresi</li>\n<li>commission | string | required | P. Kredi kartı kesintisi | örneğin (10, 20, 30,40)</li>\n<li>appointmentRange | string | required | Randevu aralığı | örneğin (10, 20, 30,40)</li>\n<li>personalCount | string | required | Personel Sayısı | örneğin (1, 3, 5,10)</li>\n<li>aboutText | string | required| İşletme Hakkında Yazısı</li>\n<li>startTime | string | required| İşletme Açılış Saati Örneğin (12:08)</li>\n<li>endTime | string | required| İşletme Kapanış Saati Örneğin (18:08)</li>\n<li>year | date | required| Kuruluş Tarihi örneğin (2023-04-01)</li>\n<li>address | text | required| Address Metni</li>\n</ul>\nDetaylı Kurulum Ekranı İşletme Bilgileri güncelleme Apisi"
      parameters: []
      responses: {  }
      tags:
        - DetailSetup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                officialName:
                  type: string
                  description: 'value değeri 255 karakter değerinden küçük olmalıdır.'
                  example: ixsrhzktcqdttzmgzqhmvmnwn
                businessName:
                  type: string
                  description: 'value değeri 255 karakter değerinden küçük olmalıdır.'
                  example: khdliarbiyizfwweivzypte
                appointmentRange:
                  type: number
                  description: ''
                  example: 174.99
                businessType:
                  type: number
                  description: ''
                  example: 23.868259
                phone:
                  type: string
                  description: 'value değeri 11 karakter değerinden büyük olmalıdır.'
                  example: wsonnmnmboyymqefbecefcixgvgapazenkndkogmiaty
                startTime:
                  type: string
                  description: ''
                  example: unde
                endTime:
                  type: string
                  description: ''
                  example: sunt
                email:
                  type: string
                  description: ''
                  example: mertz.abdullah@example.net
                year:
                  type: string
                  description: 'value geçerli bir tarih olmalıdır.'
                  example: '2023-10-22T20:06:19'
                address:
                  type: string
                  description: ''
                  example: in
                cityId:
                  type: number
                  description: ''
                  example: 9190.122
                districtId:
                  type: number
                  description: ''
                  example: 37064655.0
                commission:
                  type: number
                  description: ''
                  example: 108902.51990953
                personalCount:
                  type: number
                  description: ''
                  example: 43.215
                offDay:
                  type: number
                  description: ''
                  example: 724616554.92949
                aboutText:
                  type: string
                  description: ''
                  example: eos
              required:
                - officialName
                - businessName
                - appointmentRange
                - businessType
                - phone
                - startTime
                - endTime
                - email
                - year
                - address
                - cityId
                - districtId
                - commission
                - personalCount
                - offDay
                - aboutText
      security: []
  /api/business/package-sale:
    get:
      summary: 'GET api/business/package-sale'
      operationId: gETApibusinesspackageSale
      description: "<ul>\n<li>Bearer Token | string | required | Kullanıcı Token</li>\n</ul>\nİşletmenin paket satışı listesi sadece bu apiden dönen verileri listede göstermeniz yeterlidir."
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - PackageSale
      security: []
  /api/business/package-sale/payments:
    post:
      summary: 'POST api/business/package-sale/payments'
      operationId: pOSTApibusinesspackageSalepayments
      description: "<ul>\n<li>Bearer Token | string | required | Kullanıcı Token</li>\n<li>package_id | numeric | required | Paket id</li>\n</ul>\nİd si gönderilen paketin ödemelerinin listesini döndürecek"
      parameters: []
      responses: {  }
      tags:
        - PackageSale
      security: []
  /api/business/package-sale/usages:
    post:
      summary: 'POST api/business/package-sale/usages'
      operationId: pOSTApibusinesspackageSaleusages
      description: "<ul>\n<li>Bearer Token | string | required | Kullanıcı Token</li>\n<li>package_id | numeric | required | Paket id</li>\n</ul>\nİd si gönderilen paketin kullanım listesini döndürecek"
      parameters: []
      responses: {  }
      tags:
        - PackageSale
      security: []
  /api/business/package-sale/create-packet:
    get:
      summary: 'GET api/business/package-sale/create-packet'
      operationId: gETApibusinesspackageSalecreatePacket
      description: "<ul>\n<li>Bearer Token | string | required | Kullanıcı Token</li>\n</ul>\nBu point ile paket satışı oluşturma sayfasını açtığınızda ihtiyacınız olan tüm bilgiler size döndürülecek"
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - PackageSale
      security: []
  /api/business/package-sale/add-packet:
    post:
      summary: 'POST api/business/package-sale/add-packet'
      operationId: pOSTApibusinesspackageSaleaddPacket
      description: "<ul>\n<li>Bearer Token | string | required | Kullanıcı Token</li>\n<li>customer_id | string | required | Müşteri Id'si</li>\n<li>service_id | string | required | Hizmet ID 'si</li>\n<li>amount | string | required | Adet, Paket Sayısı</li>\n<li>total | string | required | Toplam Fiyat, Fiyat</li>\n<li>personel_id | string | required | Personel ID'si</li>\n<li>package_type | string | required | Paket Türü seans veya dakika</li>\n<li>seller_date | date | required | Paket Satış Tarihi örnek (14.10.2023)</li>\n</ul>\nBu point ile paket satışı oluşturma işlemini gerçekleştireceksiniz"
      parameters: []
      responses: {  }
      tags:
        - PackageSale
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: string
                  description: ''
                  example: alias
                service_id:
                  type: string
                  description: ''
                  example: et
                amount:
                  type: string
                  description: ''
                  example: fugiat
                total:
                  type: string
                  description: ''
                  example: recusandae
                personel_id:
                  type: string
                  description: ''
                  example: autem
                package_type:
                  type: string
                  description: ''
                  example: ipsam
                seller_date:
                  type: string
                  description: ''
                  example: eligendi
              required:
                - customer_id
                - service_id
                - amount
                - total
                - personel_id
                - package_type
                - seller_date
      security: []
  /api/business/package-sale/add-payment:
    post:
      summary: 'POST api/business/package-sale/add-payment'
      operationId: pOSTApibusinesspackageSaleaddPayment
      description: "<ul>\n<li>Bearer Token | string | required | Kullanıcı Token</li>\n<li>package_id | string | required | Paket Id'si</li>\n<li>price | string | required | Ödeme Yapılan Tutar</li>\n<li>amount | string | required | Ödeme Yapılan adet</li>\n</ul>\nBu point ile pakete ödeme eklemi işlemini gerçekleştireceksiniz"
      parameters: []
      responses: {  }
      tags:
        - PackageSale
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                package_id:
                  type: string
                  description: ''
                  example: soluta
                price:
                  type: string
                  description: ''
                  example: natus
                amount:
                  type: string
                  description: ''
                  example: dolorum
              required:
                - package_id
                - price
                - amount
      security: []
  /api/business/package-sale/add-usage:
    post:
      summary: 'POST api/business/package-sale/add-usage'
      operationId: pOSTApibusinesspackageSaleaddUsage
      description: "<ul>\n<li>Bearer Token | string | required | Kullanıcı Token</li>\n<li>package_id | string | required | Paket Id'si</li>\n<li>personel_id | string | required | Kullanımı yapan personel Id'si</li>\n<li>amount | string | required | Kullanılan adet</li>\n<li>operation_date | string | required | İşlemin yapıldığı tarih örn (19.10.2023 19:56:11)</li>\n</ul>\nBu point ile pakete ödeme eklemi işlemini gerçekleştireceksiniz"
      parameters: []
      responses: {  }
      tags:
        - PackageSale
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                package_id:
                  type: string
                  description: ''
                  example: voluptatem
                personel_id:
                  type: string
                  description: ''
                  example: sint
                amount:
                  type: string
                  description: ''
                  example: aliquam
                operation_date:
                  type: string
                  description: ''
                  example: ut
              required:
                - package_id
                - personel_id
                - amount
                - operation_date
      security: []
  /api/business/payment:
    get:
      summary: 'GET api/payment'
      operationId: gETApipayment
      description: "<ul>\n<li>Bearer Token | string | required | Kullanıcı Token</li>\n</ul>\nKullanıcını işletmesinin packet bilgisi ve kullanıcının cartları"
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Payment
      security: []
  /api/business/payment/pay:
    post:
      summary: 'POST api/payment/pay'
      operationId: pOSTApipaymentpay
      description: "<ul>\n<li>Bearer Token | string | required | Kullanıcı Token</li>\n<li>cart_id | numeric | required | Seçilen Kart Bilgisi</li>\n</ul>\nKullanıcını işletmesinin packet bilgisi ve kullanıcının cartları"
      parameters: []
      responses: {  }
      tags:
        - Payment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cart_id:
                  type: string
                  description: 'value değeri 1 karakter değerinden büyük olmalıdır.'
                  example: hejstfmnzqyzetrxwsivvmmqjjtycmtykygypegtqmdljiasluxblrlgmgysbqofvkmtmsajodzlxvwflqbnbjmr
              required:
                - cart_id
      security: []
  /api/business/personal:
    get:
      summary: 'GET api/personal'
      operationId: gETApipersonal
      description: "Personel listesini döndürecek size\n<br> Gerekli alanlar\n<ul>\n<li> token </li>\n</ul>"
      parameters:
        -
          in: header
          name: Bearer
          description: ''
          example: '{token}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Personal
      security: []
  /api/business/personal/get:
    post:
      summary: 'POST api/personal/get'
      operationId: pOSTApipersonalget
      description: "id si gönderilen personelin getirecek\n<br> Gerekli alanlar\n<ul>\n<li> token </li>\n<li>personalId | required | güncellenecek personel id si</li>\n</ul>"
      parameters:
        -
          in: header
          name: Bearer
          description: ''
          example: '{token}'
          schema:
            type: string
      responses: {  }
      tags:
        - Personal
      security: []
  /api/business/personal/add:
    post:
      summary: 'POST api/personal/add'
      operationId: pOSTApipersonaladd
      description: "Personel Ekleme pointi\n<br> Gerekli alanlar\n<ul>\n<li> token </li>\n<li> name |required | string | </li>\n<li> image |required | string | </li>\n<li> email |required | string | </li>\n<li> phone |required | string | </li>\n<li> password |required | string | </li>\n<li> approveType |required | numeric | örneğin 1 veya 0</li>\n<li> restDay |required | numeric | haftanın günlerinden herhangi bir günün id si</li>\n<li> startTime |required | string | örneğin 10:43 </li>\n<li> endTime |required | string | örneğin 10:43</li>\n<li> foodStart |required | string | örneğin 10:43</li>\n<li> foodEnd |required | string | örneğin 10:43</li>\n<li> gender |required | numeric | 1 => kadın,2 => erkek,3 => Unisex herhangi biri</li>\n<li> rate |required | numeric | 10 personel yüzdesi 10 = %10</li>\n<li> appointmentRange |required | numeric | randevu aralığı örneğin \"15\" dk bazında</li>\n<li> description |required | string</li>\n<li> services | required | array | eğer tümü seçeneği seçilirse \"all\" olarak gönderebilirsiniz dizi içerisinde</li>\n</ul>"
      parameters:
        -
          in: header
          name: Bearer
          description: ''
          example: '{token}'
          schema:
            type: string
      responses: {  }
      tags:
        - Personal
      security: []
  /api/business/personal/update:
    post:
      summary: 'POST api/personal/update'
      operationId: pOSTApipersonalupdate
      description: "Personel Güncelleme pointi\n<br> Gerekli alanlar\n<ul>\n<li> token </li>\n<li> personal_id | required | numeric</li>\n<li> name |required | string | personal adı</li>\n<li> image |required | string | personel görseli</li>\n<li> email |required | string | mail adresi</li>\n<li> phone |required | string | telefon numarası</li>\n<li> password |required | string | şifre</li>\n<li> approveType |required | numeric | örneğin 1 veya 0</li>\n<li> restDay |required | numeric | haftanın günlerinden herhangi bir günün id si</li>\n<li> startTime |required | string | örneğin 10:43 </li>\n<li> endTime |required | string | örneğin 10:43</li>\n<li> foodStart |required | string | örneğin 10:43</li>\n<li> foodEnd |required | string | örneğin 10:43</li>\n<li> gender |required | numeric | 1 => kadın,2 => erkek,3 => Unisex herhangi biri</li>\n<li> rate |required | numeric | 10 personel yüzdesi 10 = %10</li>\n<li> appointmentRange |required | numeric | randevu aralığı örneğin \"15\" dk bazında</li>\n<li> description |required | string</li>\n<li> services | required | array | eğer tümü seçeneği seçilirse \"all\" olarak gönderebilirsiniz dizi içerisinde</li>\n</ul>"
      parameters:
        -
          in: header
          name: Bearer
          description: ''
          example: '{token}'
          schema:
            type: string
      responses: {  }
      tags:
        - Personal
      security: []
  /api/business/personal/delete:
    post:
      summary: 'POST api/personal/get'
      operationId: pOSTApipersonalget
      description: "id si gönderilen personeli silecek\n<br> Gerekli alanlar\n<ul>\n<li> token </li>\n<li>personalId | required | silinecek personel id si</li>\n</ul>"
      parameters:
        -
          in: header
          name: Bearer
          description: ''
          example: '{token}'
          schema:
            type: string
      responses: {  }
      tags:
        - Personal
      security: []
  /api/personal/auth/login:
    post:
      summary: 'POST api/personal/auth/login'
      operationId: pOSTApipersonalauthlogin
      description: "Status Codes\n<ul>\n<li>phone</li>\n<li>password</li>\n<li> 401 Unauthorized Hatası </li>\n</ul>\nLogin apisi"
      parameters: []
      responses: {  }
      tags:
        - PersonalAuth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  description: ''
                  example: fugit
                password:
                  type: string
                  description: ''
                  example: '.,(9xCea4$'
              required:
                - phone
                - password
      security: []
  /api/personal/user:
    get:
      summary: 'GET api/personal/auth/user'
      operationId: gETApipersonalauthuser
      description: "<ul>\n<li>Token Göndermeniz Yeterli</li>\n</ul>\nUse Info apisi"
      parameters:
        -
          in: header
          name: Bearer
          description: ''
          example: '{token}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - PersonalAuth
      security: []
  /api/personal/logout:
    post:
      summary: 'POST api/personal/auth/logout'
      operationId: pOSTApipersonalauthlogout
      description: "<ul>\n<li>Token Göndermeniz Yeterli</li>\n</ul>\nLogout apisi"
      parameters:
        -
          in: header
          name: Bearer
          description: ''
          example: '{token}'
          schema:
            type: string
      responses: {  }
      tags:
        - PersonalAuth
      security: []
  /api/business/setup/get:
    get:
      summary: 'GET api/setup'
      operationId: gETApisetup
      description: "<ul>\n<li>Bearer Token | string | required | Kullanıcı Token</li>\n</ul>\nKayıt Ekranı Tüm Bilgiler Apisi"
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Setup
      security: []
  /api/business/setup/update:
    post:
      summary: 'POST api/setup/update'
      operationId: pOSTApisetupupdate
      description: "<ul>\n<li>Bearer Token | required | İşletme Kategorisi</li>\n<li>category_id | string | required | İşletme Kategorisi</li>\n<li>name | string | required | İşletme Adı</li>\n<li>type_id | string | required | Hizmet Türü businessTypes değişkeninden alabilirsiniz </li>\n<li>city_id  | string | required | Şehir</li>\n<li>district_id  | string | required | İlçe</li>\n<li>off_day_id  | string | required | Kapalı Olduğu Gün</li>\n<li>phone | string | required | Kullanıcı Telefon Numarası</li>\n<li>about_content | string | required| İşletme Hakkında Yazısı</li>\n<li>start_time | string | required| İşletme Açılış Saati Örneğin (12:08)</li>\n<li>end_time | string | required| İşletme Kapanış Saati Örneğin (18:08)</li>\n<li>latitude | string | required| Haritadan seçilen lat bilgisi</li>\n<li>longitude | string | required| Haritadan seçilen long bilgisi</li>\n<li>address | text | required| Address Metni</li>\n<li>package_id | integer or string | required| Seçili Paket idsi</li>\n</ul>\nKayıt Ekranı Tüm Bilgiler güncelleme Apisi"
      parameters: []
      responses: {  }
      tags:
        - Setup
      security: []
tags:
  -
    name: Authentication
    description: ''
  -
    name: BusinessService
    description: ''
  -
    name: DetailSetup
    description: ''
  -
    name: PackageSale
    description: ''
  -
    name: Payment
    description: ''
  -
    name: Personal
    description: ''
  -
    name: PersonalAuth
    description: ''
  -
    name: Setup
    description: ''
